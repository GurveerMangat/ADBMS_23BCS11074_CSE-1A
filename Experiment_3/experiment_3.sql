--easy question
/*
GENERATE AN EMPLOYEE RELATIN WITH ONLY A ONE ATTRIBUTE I.E, EMP_ID
TASK: DIND THE MAX EMP_ID, BUT EXCLUDING THE DUPLICATES
*/
CREATE TABLE EMPLOYEE(
EMPID INT
);
INSERT INTO EMPLOYEE(EMPID) VALUES
(1),
(1),
(2),
(2),
(5),
(5),
(6),
(7),
(8),
(8);
SELECT MAX(EMPID) AS [MAX_UNIQUE] FROM Employee WHERE EmpID IN (SELECT EmpID FROM Employee GROUP BY EmpID HAVING count(EmpID)=1);

--MEDIUM QUESTION
CREATE TABLE TBL_PRODUCTS
(
	ID INT PRIMARY KEY IDENTITY,
	[NAME] NVARCHAR(50),
	[DESCRIPTION] NVARCHAR(250) 
)

CREATE TABLE TBL_PRODUCTSALES
(
	ID INT PRIMARY KEY IDENTITY,
	PRODUCTID INT FOREIGN KEY REFERENCES TBL_PRODUCTS(ID),
	UNITPRICE INT,
	QUALTITYSOLD INT
)

INSERT INTO TBL_PRODUCTS VALUES ('TV','52 INCH BLACK COLOR LCD TV')
INSERT INTO TBL_PRODUCTS VALUES ('LAPTOP','VERY THIIN BLACK COLOR ACER LAPTOP')
INSERT INTO TBL_PRODUCTS VALUES ('DESKTOP','HP HIGH PERFORMANCE DESKTOP')


INSERT INTO TBL_PRODUCTSALES VALUES (3,450,5)
INSERT INTO TBL_PRODUCTSALES VALUES (2,250,7)
INSERT INTO TBL_PRODUCTSALES VALUES (3,450,4)
INSERT INTO TBL_PRODUCTSALES VALUES (3,450,9)


SELECT *FROM TBL_PRODUCTS
SELECT *FROM TBL_PRODUCTSALES

/*
TASK:FIND THE ID, NAME ,DESCRIPTION OF PRODUCT WHICH HAS NOT BEEN SOLD FOR ONCE.
*/

SELECT ID,[NAME],[DESCRIPTION] FROM TBL_PRODUCTS WHERE ID NOT IN
(SELECT DISTINCT PRODUCTID FROM TBL_PRODUCTSALES);

--USING JOIN
SELECT T.*,P.* FROM TBL_PRODUCTS AS T LEFT JOIN
TBL_PRODUCTSALES AS P
ON T.ID=P.PRODUCTID
WHERE PRODUCTID IS NULL;

--HARD QUESTION
/*
TASK: FIND THE TOTAL QUANTITY SOLD FOR EACH RESPECTIVE PRODUCT
*/
SELECT T.NAME, (SELECT SUM(QUALTITYSOLD) FROM TBL_PRODUCTSALES WHERE PRODUCTID=T.ID) AS QTY_SOLD FROM TBL_PRODUCTS AS T;
